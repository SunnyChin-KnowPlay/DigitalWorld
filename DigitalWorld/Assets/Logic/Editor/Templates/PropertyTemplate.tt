<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter name="className" type="System.String"#>
<#@ parameter name="valueType" type="System.String"#>
<#@ parameter name="id" type="System.Int32"#>
<#@ parameter name="desc" type="System.String"#>
<#@ parameter name="usingNamespaces" type="System.String[]"#>
<#@ parameter name="namespaceName" type="System.String"#>
<#
	for (int i = 0; i < usingNamespaces.Length; ++i)
	{
#>
using <#= usingNamespaces[i] #>;
<#
	}
#>

namespace <#= namespaceName #>
{
	/// <summary>
    /// <#= desc #>
    /// </summary>
    public partial class <#= className #> : PropertyTemplate<<#= valueType #>>
    {
        public override int Id => <#= id #>;

        public override object Clone()
        {
            <#= className #> v = null;
            if (Application.isPlaying)
            {
                v = Dream.Core.ObjectPool<<#= className #>>.Instance.Allocate();
            }
            else
            {
                v = new <#= className #>();
            }

            if (null != v)
            {
                this.CloneTo(v);
            }

            return v;
        }
    }
}
